#!/bin/bash -f

#   ////////////////////////////////////////////////////////////////////////////////////////////////
#   //                                                                                            //
#   // Copyright (2022) Patrick A. Bonnaud                                                        //
#   //                                                                                            //
#   // This file is part of BUILDLIBRARY (Build Molecular Models for a Library of Molecules).     //
#   //                                                                                            //
#   // BUILDLIBRARY is free software; you can redistribute it and/or modify it under the terms    //
#   // of the GNU General Public License as published by the Free Software Foundation; either     //
#   // version 2 of the License, or (at your option) any later version.                           //
#   //                                                                                            //
#   // BUILDLIBRARY is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;  //
#   // without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  //
#   // See the GNU General Public License for more details.                                       //
#   //                                                                                            //
#   // You should have received a copy of the GNU General Public License along with this program. //
#   // If not, see <http://www.gnu.org/licenses/>.                                                //
#   //                                                                                            //
#   ////////////////////////////////////////////////////////////////////////////////////////////////

rm -f Makefile

CC='ifort'
###CC='mpif90 -fno-range-check -O3'
###CC='mpif90 -O3'

echo '# Master makefile for BUILDLIBRARY                                      ' >  Makefile
echo '# Author: P. Bonnaud SEPTEMBER 2017                                     ' >> Makefile
echo '#                                                                       ' >> Makefile          
echo '#=======================================================================' >> Makefile
echo '# Define default settings                                               ' >> Makefile
echo '#=======================================================================' >> Makefile
echo '                                                                        ' >> Makefile
echo '.SUFFIXES: .F90                                                         ' >> Makefile
echo '.SUFFIXES: .f90                                                         ' >> Makefile
echo '                                                                        ' >> Makefile
echo '#=======================================================================' >> Makefile
echo '# Define object files                                                   ' >> Makefile
echo '                                                                        ' >> Makefile

rm -f tmp

ls | grep '.f90'  >  tmp
ls | grep '.F90'  >> tmp

NLINES=`cat tmp | wc -l`

echo 'THERE IS '$NLINES' files'

VAROBJ='OBJS ='

icount=0

iprog=0

while read line
do
    newline=`echo $line | tr '.f90' '.o  '`

    if [[ $line == *"module_"* ]]; then
        newline=`echo $line | tr '.F90' '.o  '`
    fi

    VAROBJ=$VAROBJ' '$newline

    icount=$((icount+1));
    iprog=$((iprog+1));

    if [ $icount = 3 ] && [ $iprog -lt $NLINES ]; then
        VAROBJ=$VAROBJ'\ '
        echo $VAROBJ >> Makefile
        icount=0
        VAROBJ=''
    fi

    if [ $iprog = $NLINES ]; then
        echo $VAROBJ >> Makefile
        break;
    fi

done < tmp

echo '                                                                      ' >> Makefile
echo '#=====================================================================' >> Makefile
echo '                                                                      ' >> Makefile

VARMODULE='MODULE ='

icount=0

iprog=0

while read line
do

    if [[ $line == *"module_"* ]]; then
        echo $line
        newline=`echo $line | tr '.F90' '.mod  '`

        VARMODULE=$VARMODULE' '$newline

        icount=$((icount+1));
    fi

    iprog=$((iprog+1));


    if [ $icount = 3 ] && [ $iprog -lt $NLINES ]; then
        VARMODULE=$VARMODULE'\ '
        echo $VARMODULE >> Makefile
        icount=0
        VARMODULE=''
    fi

    if [ $iprog = $NLINES ]; then
        echo $VARMODULE >> Makefile
        break;
    fi

done < tmp

echo '                                                                      ' >> Makefile
echo '#=====================================================================' >> Makefile
echo '# Define targets                                                      ' >> Makefile
echo '                                                                      ' >> Makefile
echo 'all: BUILDLIBRARY_AMD.exe                                             ' >> Makefile
echo '                                                                      ' >> Makefile
echo 'BUILDLIBRARY_AMD.exe: $(MODULE) $(OBJS)                               ' >> Makefile
echo '	'$CC' -O3 -o BUILDLIBRARY_AMD.exe  $(OBJS)                          ' >> Makefile
echo '                                                                      ' >> Makefile

while read line
do

    if [[ $line == *"module_"* ]]; then
        echo $line
        newline=`echo $line | tr '.F90' '.mod  '`
        echo $newline

        newline=`echo $newline: '$(MODULE)' $line`
        echo $newline >> Makefile
        echo '	'$CC' -c '$line   >> Makefile
        echo '                                                                      ' >> Makefile

        icount=$((icount+1));
    fi

    iprog=$((iprog+1));

    if [ $iprog = $NLINES ]; then
        break;
    fi

done < tmp



echo '                                                                      ' >> Makefile
echo '.f90.o:                                                               ' >> Makefile
echo '	'$CC' -c $<                                                       ' >> Makefile
echo '                                                                      ' >> Makefile
echo '.F90.o:                                                               ' >> Makefile
echo '	'$CC' -c $<                                                         ' >> Makefile
echo '                                                                      ' >> Makefile
echo 'clean:                                                                ' >> Makefile
echo '	rm -f *.o *.mod                                                     ' >> Makefile

rm -f tmp





